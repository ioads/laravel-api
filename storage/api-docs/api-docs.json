{
    "openapi": "3.0.0",
    "info": {
        "title": "Starsoft API",
        "description": "API criada para consultas de tarefas dos usu√°rios",
        "version": "1.0.0"
    },
    "paths": {
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a list of tasks",
                "description": "Returns a list of tasks",
                "operationId": "getTasks",
                "responses": {
                    "200": {
                        "description": "A list of user tasks"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/task": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "description": "Creates a new task and returns it",
                "operationId": "createTask",
                "requestBody": {
                    "description": "Task object that needs to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "status"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "task title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "task description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "em andamento"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a single task",
                "description": "Returns a single task",
                "operationId": "getTaskById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single task"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task",
                "description": "Deletes a task",
                "operationId": "deleteTaskById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single task"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/task/{id}": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task",
                "description": "Updated a task",
                "operationId": "updateTask",
                "requestBody": {
                    "description": "Task object that needs to be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "task title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "task description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "em andamento"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user and returns it",
                "operationId": "createUser",
                "requestBody": {
                    "description": "User object that needs to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "joao"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "joao@starsoft.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate a user",
                "description": "Authenticates a user and returns token",
                "operationId": "authUser",
                "requestBody": {
                    "description": "User object that needs to be authenticated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email",
                                        "example": "joao@starsoft.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "your password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User authenticated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout a user",
                "description": "Remover a user token",
                "operationId": "logoutUser",
                "responses": {
                    "201": {
                        "description": "User logout successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "apiKey",
                "description": "Enter your Bearer token",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Tasks",
            "description": "Tasks"
        },
        {
            "name": "Auth",
            "description": "Auth"
        }
    ]
}